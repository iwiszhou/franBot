version: '3'
services: 
  chatbot1: 
    image: chatbot
    build:
      context: ./chatbot
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment: 
      - TELEGRAM_ACCESS_TOKEN=${TELEGRAM_ACCESS_TOKEN}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - CHATGPT_BASICURL=${CHATGPT_BASICURL}
      - CHATGPT_MODELNAME=${CHATGPT_MODELNAME}
      - CHATGPT_APIVERSION=${CHATGPT_APIVERSION}
      - CHATGPT_ACCESS_TOKEN=${CHATGPT_ACCESS_TOKEN}
      - SECRET_TOKEN=${SECRET_TOKEN}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - LOCALHOST=0.0.0.0
      - LISTEN_PORT=5000
      - URL_PATH=1
      - CERT_PATH=nginx-selfsigned.crt
    restart: always
    container_name: chatbot1
    networks:
      - comp7940
  chatbot2: 
    image: chatbot
    env_file:
      - .env
    environment: 
      - TELEGRAM_ACCESS_TOKEN=${TELEGRAM_ACCESS_TOKEN}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - CHATGPT_BASICURL=${CHATGPT_BASICURL}
      - CHATGPT_MODELNAME=${CHATGPT_MODELNAME}
      - CHATGPT_APIVERSION=${CHATGPT_APIVERSION}
      - CHATGPT_ACCESS_TOKEN=${CHATGPT_ACCESS_TOKEN}
      - SECRET_TOKEN=${SECRET_TOKEN}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - LOCALHOST=0.0.0.0
      - LISTEN_PORT=5001
      - URL_PATH=1
      - CERT_PATH=nginx-selfsigned.crt
    restart: always
    container_name: chatbot2
    networks:
      - comp7940
  nginx: 
    image: nginx-project
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    ports:
      - "443:443"
    restart: always
    container_name: nginx
    volumes: 
      - /home/nginx/log:/var/log/nginx
    networks:
      - comp7940
    depends_on: 
      - chatbot1
      - chatbot2
networks:
  comp7940:
    driver: bridge